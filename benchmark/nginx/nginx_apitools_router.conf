#user  nobody;
worker_processes  auto;

events {
    worker_connections  10240;
}

http {
    init_by_lua '
        require "resty.core"
        atrouter = require "router";
        --atrouter = require "resty.r3_apitools";
        -- foo handler
        function foo(params)
          ngx.say("fooooooooooooooooooooooo")
          ngx.say("tokens:" .. table.concat(tokens, ","))
          for key, value in pairs(params) do
            ngx.say("param:" .. key .. "=" .. value)
          end
        end

        atr = atrouter.new()
        atr:match("GET", "/", function(params)
          ngx.say("hello1")
        end)
        atr:match("GET", "/foo/bar/baz/hoge/fuga/piyo/", function(params)
          --ngx.say("hello2")
        end)
        atr:match("GET", "/foo/:id/:name", function(params)
          ngx.say("hello3")
        end)
    ';

    include       mime.types;
    default_type  application/octet-stream;

    sendfile       on;
    tcp_nopush     on;

    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;
        access_log  off;

        location / {
          content_by_lua '
            -- dispatcher
            local ok, err = atr:execute(ngx.var.request_method, ngx.var.uri)
            if not ok then
              ngx.status = 404
              ngx.print("Not found")
            end
          ';
        }
    }
}
