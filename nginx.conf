daemon off;
worker_processes  1;
error_log logs/error.log;
events {
    worker_connections 1024;
}

http {
  lua_code_cache off;
  lua_package_path "/code/lib/?.lua;;";

  server {
    listen 80;

    location / {
      default_type text/html;
      content_by_lua '
        local r3router = require "resty.r3";

        -- foo handler
        function foo(tokens, params)
          ngx.say("fooooooooooooooooooooooo")
          ngx.say("tokens:" .. table.concat(tokens, ","))
          for key, value in pairs(params) do
            ngx.say("param:" .. key .. "=" .. value)
          end
        end

        -- r3router
        local r = r3router.new({
            {"GET",           "/",                function(tokens, params) ngx.say("hello r3!") end },
            {"GET",           "/foo",             foo},
            {{"GET","POST"},  "/foo/{id}/{name}", foo},
        })

        -- dispatcher
        local ok = r:dispatch_ngx()
        if ok then
          ngx.status = 200
        else
          ngx.status = 404
          ngx.print("Not found")
        end
      ';
    }
  }
}

